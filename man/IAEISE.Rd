% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IAEISE.R
\name{IAEISE}
\alias{IAEISE}
\title{IAEISE}
\usage{
IAEISE(object, sp_matrix, IRange = range(object[, 1]))
}
\arguments{
\item{object}{object of class \code{Surv} on the testing set created by Surv function.}

\item{sp_matrix}{a matrix of predicted values of survival probabilities for the testing set.}

\item{IRange}{a vector contains all discrete time points corresponding to the predicted probability in sp_matrix.
Or the scale you want to get the IAE and ISE;  .}
}
\value{
Estimates of the IAE and ISE
}
\description{
Two ways of the continuous-time approach to continuous-time identification based on least-squares and least-absolute errors are proposed.
Integrate Absolute Error and Integrate Square Error.To evaluate the performance of survival models methods
Lower values of IAE or ISE indicate better performances.
}
\examples{

library(randomForestSRC)
library(MASS)
library(survival)
set.seed(123)
N=100
p = 25
c.mean = 0.4
mu = rep(0,p)
Si = matrix(0,p,p)
for (i in 1:p) {
  for (j in 1:p) {
    Si[i,j] = 0.9^abs(i-j)
  }
}
W = mvrnorm(N,mu,Si)
Ti = rep(0,N)
for (i in 1:N) {
  t.mu = exp(0.1*sum(W[i,1:round(p/2)]))
  Ti[i] = rexp(1,1/t.mu)
}
c.time = rexp(N,c.mean)
mydata.x = as.data.frame(W)
mydata.time = data.frame('time'=Ti,'c.time' = c.time,'status' = 0)
mydata.time$status = ifelse(mydata.time$time < mydata.time$c.time,1,0)
mydata.time$time = apply(mydata.time[,1:2],1,min)
mydata = data.frame('time' = mydata.time$time,'status' = mydata.time$status,W)

index.train = sample(1:N,2/3*N)
data.train = mydata[index.train,]
data.test = mydata[-index.train,]
fit.RSF = rfsrc(Surv(time,status)~.,data.train,nsplit=3,ntree=500)
predicted = predict(fit.RSF,data.test)
sp_matrix = predicted$survival
object = Surv(data.test$time,data.test$status)
#a vector for all the distinct time
IAEISE(object,sp_matrix,with(data.train,time[status==1]))
#a range
IAEISE(object,sp_matrix,c(12,350))

}
\references{
Marron, J. S. , &  Wand, M. P. . (1992). Exact mean integrated squared error. Annals of Statistics, 20(2), 712-736.
HooraMoradian, DenisLarocque, & FranoisBellavance. (2017). \\(l_1\\) splitting rules in survival forests. Lifetime Data Analysis, 23(4), 671â€“691.
Kowalczuk, & Z. (1998). Integrated squared error and integrated absolute error in recursive identification of continuous-time plants. Control 98 Ukacc International Conference on (Vol.1998, pp.693-698). IET.
}
\author{
Zhou HanPu \email{zhouhanpu@csu.edu.cn}
}
