library(devtools)
document()
build()
check()
usethis::use_vignette("my-vignette")
library(devtools)
document()
build()
document()
build()
check()
library(qpdf)
?qpdf
??qpdf
#Initialization
metrics_cox = 0
metrics_rsf = 0
for (i in 1:3) {
mydata = SDGM4(N = 100, p = 20, c_step = 0.5)
index_data = createFolds(1:nrow(mydata),2)
train_data = mydata[index_data[[1]],]
test_data = mydata[index_data[[2]],]
#fit the models
fitrsf = rfsrc(Surv(time,status)~., data = train_data, nsplit = 3, ntree = 500)
mat_rsf = predict(fitrsf, test_data)$survival
dis_time = fitrsf$time.interest
fitcox = coxph(Surv(time,status)~., data = train_data, x = TRUE)
mat_cox = predictSurvProb(fitcox, test_data, dis_time)
#calculate the C index
med_index = median(1:length(dis_time))
surv_obj = Surv(test_data$time,test_data$status)
#C index for Cox[
metrics_cox[i] = IBS(surv_obj, sp_matrix = mat_cox, dis_time)
#C index for RSF
metrics_rsf[i] = IBS(surv_obj, sp_matrix = mat_rsf, dis_time)
}
document()
build()
check()
install.packages("qpdf")
#Initialization
metrics_cox = 0
metrics_rsf = 0
for (i in 1:3) {
mydata = SDGM4(N = 100, p = 20, c_step = 0.5)
index_data = createFolds(1:nrow(mydata),2)
train_data = mydata[index_data[[1]],]
test_data = mydata[index_data[[2]],]
#fit the models
fitrsf = rfsrc(Surv(time,status)~., data = train_data, nsplit = 3, ntree = 500)
mat_rsf = predict(fitrsf, test_data)$survival
dis_time = fitrsf$time.interest
fitcox = coxph(Surv(time,status)~., data = train_data, x = TRUE)
mat_cox = predictSurvProb(fitcox, test_data, dis_time)
#calculate the C index
med_index = median(1:length(dis_time))
surv_obj = Surv(test_data$time,test_data$status)
#C index for Cox[
metrics_cox[i] = IBS(surv_obj, sp_matrix = mat_cox, dis_time)
#C index for RSF
metrics_rsf[i] = IBS(surv_obj, sp_matrix = mat_rsf, dis_time)
}
library(qpdf)
library(qpdf)
document()
build()
check()
document()
build()
check()
document()
build()
check()
install.packages("E:/english_path/Rpackagetest/SurvMetrics_2021.7.9.tar.gz", repos = NULL, type = "source")
library(survMisc)
library(devtools)
document()
build()
check()
library(devtools)
document()
build()
document()
build()
library(devtools)
document()
build()
library()
library(devtools)
document()
build()
check()
devtools::check()
devtools::build()
devtools::build()
devtools::document()
devtools::build()
devtools::build()
build()
devtools::build()
devtools::release()
devtools::release()
devtools::check_rhub()
devtools::check_rhub()
devtools::check_rhub()
devtools::check_rhub()
devtools::check_rhub()
devtools::check_rhub()
devtools::check()
devtools::build()
R CMD check
git clone https://github.com/danielegiardiello/Prediction_performance_survival.git
devtools::check_man()
devtools::check_built()
devtools::check_dep_version()
devtools::check_win_devel()
devtools::check_rhub()
git remote add origin git@github.com:skyee1/SurvMetrics.git
